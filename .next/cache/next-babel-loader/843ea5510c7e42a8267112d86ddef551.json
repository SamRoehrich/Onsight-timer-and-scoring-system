{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/timer/next/components/Scoring.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useLocalState } from './LocalState';\nimport ScoreCard from \"./ScoreCard\";\n\nconst Scoring = ({\n  activeClimbers\n}) => {\n  const {\n    roundInformation\n  } = useLocalState();\n  const {\n    round\n  } = roundInformation;\n  console.log(round);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, \"ON Deck\"), round.getOnDeck().map(athlete => {\n    __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }\n    }, athlete.name);\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Climbing\"), round.climbing.map(athlete => {\n    __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, athlete.name);\n  }));\n};\n\nexport default Scoring; //get index of active athlete from timer page and render scorecard for each athlete based on that index","map":{"version":3,"sources":["/Users/sam/Desktop/timer/next/components/Scoring.jsx"],"names":["useLocalState","ScoreCard","Scoring","activeClimbers","roundInformation","round","console","log","getOnDeck","map","athlete","name","climbing"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,cAA9B;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAEpC,QAAM;AAAEC,IAAAA;AAAF,MAAuBJ,aAAa,EAA1C;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAYD,gBAAlB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAGQA,KAAK,CAACG,SAAN,GAAkBC,GAAlB,CAAsBC,OAAO,IAAI;AAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,OAAO,CAACC,IAAZ;AACH,GAFD,CAHR,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,EASQN,KAAK,CAACO,QAAN,CAAeH,GAAf,CAAmBC,OAAO,IAAI;AAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,OAAO,CAACC,IAAZ;AACH,GAFD,CATR,CADJ;AAgBH,CArBD;;AAuBA,eAAeT,OAAf,C,CAEA","sourcesContent":["import { useLocalState } from './LocalState'\n\nimport ScoreCard from \"./ScoreCard\"\n\nconst Scoring = ({ activeClimbers }) => {\n\n    const { roundInformation } = useLocalState()\n    const { round } = roundInformation;\n    console.log(round)\n    return(\n        <div>\n            <h1>ON Deck</h1>\n            {\n                round.getOnDeck().map(athlete => {\n                    <p>{athlete.name}</p>\n                })\n            }\n            <h1>Climbing</h1>\n            {\n                round.climbing.map(athlete => {\n                    <p>{athlete.name}</p>\n                })\n            }\n        </div>\n    )\n}\n\nexport default Scoring\n\n//get index of active athlete from timer page and render scorecard for each athlete based on that index"]},"metadata":{},"sourceType":"module"}