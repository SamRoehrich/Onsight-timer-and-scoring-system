{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/sam/Desktop/timer/next/components/Scoring.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useLocalState } from './LocalState';\nimport ScoreCard from \"./ScoreCard\";\n\nvar Scoring = function Scoring(_ref) {\n  _s();\n\n  var onDeck = _ref.onDeck,\n      activeClimbers = _ref.activeClimbers;\n\n  var _useLocalState = useLocalState(),\n      roundInformation = _useLocalState.roundInformation;\n\n  console.log(onDeck, activeClimbers);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, __jsx(ScoreCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(Scoring, \"yTRKCalA+0RToLkLlem1LDX4vMc=\", false, function () {\n  return [useLocalState];\n});\n\n_c = Scoring;\nexport default Scoring;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scoring\");","map":{"version":3,"sources":["/Users/sam/Desktop/timer/next/components/Scoring.jsx"],"names":["useLocalState","ScoreCard","Scoring","onDeck","activeClimbers","roundInformation","console","log"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,cAA9B;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAgC;AAAA;;AAAA,MAA7BC,MAA6B,QAA7BA,MAA6B;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;;AAAA,uBAEfJ,aAAa,EAFE;AAAA,MAEpCK,gBAFoC,kBAEpCA,gBAFoC;;AAG5CC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EAAoBC,cAApB;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CATD;;GAAMF,O;UAE2BF,a;;;KAF3BE,O;AAWN,eAAeA,OAAf","sourcesContent":["import { useLocalState } from './LocalState'\n\nimport ScoreCard from \"./ScoreCard\"\n\n\nconst Scoring = ({ onDeck, activeClimbers }) => {\n\n    const { roundInformation } = useLocalState()\n    console.log(onDeck, activeClimbers)\n    return(\n        <div>\n            <ScoreCard/>\n        </div>\n    )\n}\n\nexport default Scoring"]},"metadata":{},"sourceType":"module"}