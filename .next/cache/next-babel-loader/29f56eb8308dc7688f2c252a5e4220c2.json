{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/sam/Desktop/timer/next/components/Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { useLocalState } from './LocalState';\n\nvar Timer = function Timer() {\n  _s();\n\n  var _useState = useState(1),\n      minutes = _useState[0],\n      setMinutes = _useState[1];\n\n  var _useState2 = useState(0),\n      seconds = _useState2[0],\n      setSeconds = _useState2[1];\n\n  var _useState3 = useState(false),\n      isActive = _useState3[0],\n      setIsActive = _useState3[1];\n\n  var _useLocalState = useLocalState(),\n      roundInformation = _useLocalState.roundInformation;\n\n  var round = roundInformation.round;\n\n  function toggle() {\n    setIsActive(!isActive);\n    round.startRound();\n  }\n\n  function reset() {\n    round.transition();\n    setMinutes(1);\n    setSeconds(0);\n  } //timer control\n\n\n  useEffect(function () {\n    if (isActive) {\n      if (seconds == 0) {\n        if (minutes > 0) {\n          setSeconds(59);\n          setMinutes(minutes - 1);\n        }\n\n        if (minutes == 0) {\n          reset();\n        }\n      }\n\n      if (seconds > 0) {\n        setTimeout(function () {\n          return setSeconds(seconds - 1);\n        }, 1000);\n      }\n    }\n  }, [isActive, seconds, minutes]);\n  return __jsx(\"div\", {\n    className: \"timer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, minutes, \" : \", seconds < 10 ? \"0\".concat(seconds) : seconds), __jsx(\"button\", {\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, isActive ? 'Stop' : 'Start'));\n};\n\n_s(Timer, \"CzAMal9UXkItR/FKgadHpb9KdcI=\", false, function () {\n  return [useLocalState];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/sam/Desktop/timer/next/components/Timer.jsx"],"names":["useState","useEffect","useLocalState","Timer","minutes","setMinutes","seconds","setSeconds","isActive","setIsActive","roundInformation","round","toggle","startRound","reset","transition","setTimeout"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,cAA9B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAAA,kBAEcH,QAAQ,CAAC,CAAD,CAFtB;AAAA,MAETI,OAFS;AAAA,MAEAC,UAFA;;AAAA,mBAGcL,QAAQ,CAAC,CAAD,CAHtB;AAAA,MAGTM,OAHS;AAAA,MAGAC,UAHA;;AAAA,mBAIgBP,QAAQ,CAAC,KAAD,CAJxB;AAAA,MAITQ,QAJS;AAAA,MAICC,WAJD;;AAAA,uBAKaP,aAAa,EAL1B;AAAA,MAKRQ,gBALQ,kBAKRA,gBALQ;;AAAA,MAMRC,KANQ,GAMED,gBANF,CAMRC,KANQ;;AAQhB,WAASC,MAAT,GAAkB;AACdH,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAG,IAAAA,KAAK,CAACE,UAAN;AACH;;AAED,WAASC,KAAT,GAAiB;AACbH,IAAAA,KAAK,CAACI,UAAN;AACAV,IAAAA,UAAU,CAAC,CAAD,CAAV;AACAE,IAAAA,UAAU,CAAC,CAAD,CAAV;AACH,GAjBe,CAmBhB;;;AACAN,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGO,QAAH,EAAa;AACT,UAAGF,OAAO,IAAI,CAAd,EAAiB;AACb,YAAGF,OAAO,GAAG,CAAb,EAAgB;AACZG,UAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,UAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACH;;AACD,YAAGA,OAAO,IAAI,CAAd,EAAiB;AACbU,UAAAA,KAAK;AACR;AACJ;;AACD,UAAGR,OAAO,GAAG,CAAb,EAAgB;AACZU,QAAAA,UAAU,CAAC;AAAA,iBAAMT,UAAU,CAACD,OAAO,GAAG,CAAX,CAAhB;AAAA,SAAD,EAAgC,IAAhC,CAAV;AACH;AACJ;AACJ,GAfQ,EAeN,CAACE,QAAD,EAAWF,OAAX,EAAoBF,OAApB,CAfM,CAAT;AAiBA,SACA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAL,SAAiBE,OAAO,GAAG,EAAV,cAAmBA,OAAnB,IAA+BA,OAAhD,CADJ,EAEI;AAAQ,IAAA,OAAO,EAAEM,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BJ,QAAQ,GAAG,MAAH,GAAY,OAA9C,CAFJ,CADA;AAMH,CA3CD;;GAAML,K;UAK2BD,a;;;KAL3BC,K;AA6CN,eAAeA,KAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useLocalState } from './LocalState'\n\nconst Timer = () => {\n\n    const [minutes, setMinutes] = useState(1)\n    const [seconds, setSeconds] = useState(0)\n    const [isActive, setIsActive] = useState(false)\n    const { roundInformation } = useLocalState()\n    const { round } = roundInformation;\n\n    function toggle() {\n        setIsActive(!isActive)\n        round.startRound()\n    }\n\n    function reset() {\n        round.transition()\n        setMinutes(1)\n        setSeconds(0)\n    }\n\n    //timer control\n    useEffect(() => {\n        if(isActive) {\n            if(seconds == 0) {\n                if(minutes > 0) {\n                    setSeconds(59)\n                    setMinutes(minutes - 1)\n                }\n                if(minutes == 0) {\n                    reset()\n                }\n            }\n            if(seconds > 0) {\n                setTimeout(() => setSeconds(seconds - 1), 1000)\n            }\n        }\n    }, [isActive, seconds, minutes])\n\n    return (\n    <div className='timer'>\n        <h1>{minutes} : {seconds < 10 ? `0${seconds}` : seconds}</h1>\n        <button onClick={toggle}>{isActive ? 'Stop' : 'Start'}</button>\n    </div>\n    )\n}\n\nexport default Timer"]},"metadata":{},"sourceType":"module"}