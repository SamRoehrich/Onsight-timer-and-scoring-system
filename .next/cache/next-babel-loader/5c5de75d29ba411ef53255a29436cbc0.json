{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/sam/Desktop/timer/next/pages/timer.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { useLocalState } from '../components/LocalState';\n\nvar TimerPage = function TimerPage() {\n  _s();\n\n  var _useState = useState(4),\n      minutes = _useState[0],\n      setMinutes = _useState[1];\n\n  var _useState2 = useState(0),\n      seconds = _useState2[0],\n      setSeconds = _useState2[1];\n\n  var _useState3 = useState(false),\n      isActive = _useState3[0],\n      setIsActive = _useState3[1];\n\n  var _useState4 = useState(0),\n      tick = _useState4[0],\n      setTick = _useState4[1];\n\n  var _useLocalState = useLocalState(),\n      roundInformation = _useLocalState.roundInformation;\n\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function reset() {\n    setMinutes();\n    setSeconds(0);\n    setIsActive(false);\n  }\n\n  useEffect(function () {\n    console.log(roundInformation);\n\n    if (isActive) {\n      if (seconds == 0) {\n        if (minutes > 0) {\n          setSeconds(59);\n          setMinutes(minutes - 1);\n        }\n\n        if (minutes == 0) {\n          setSeconds(59);\n          setMinutes(3);\n        }\n      }\n\n      if (seconds > 0) {\n        setTimeout(function () {\n          return setSeconds(seconds - 1);\n        }, 1000);\n        setTick(tick + 1);\n      }\n    }\n  }, [isActive, seconds, minutes]);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"athlete-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(TimerPage, \"8WJ+rzR2iFbGp24ra0hQttKk3ds=\", false, function () {\n  return [useLocalState];\n});\n\n_c = TimerPage;\nexport default TimerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerPage\");","map":{"version":3,"sources":["/Users/sam/Desktop/timer/next/pages/timer.js"],"names":["useState","useEffect","useLocalState","TimerPage","minutes","setMinutes","seconds","setSeconds","isActive","setIsActive","tick","setTick","roundInformation","toggle","reset","console","log","setTimeout"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAASC,aAAT,QAA8B,0BAA9B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,kBACUH,QAAQ,CAAC,CAAD,CADlB;AAAA,MACbI,OADa;AAAA,MACJC,UADI;;AAAA,mBAEUL,QAAQ,CAAC,CAAD,CAFlB;AAAA,MAEbM,OAFa;AAAA,MAEJC,UAFI;;AAAA,mBAGYP,QAAQ,CAAC,KAAD,CAHpB;AAAA,MAGbQ,QAHa;AAAA,MAGHC,WAHG;;AAAA,mBAIIT,QAAQ,CAAC,CAAD,CAJZ;AAAA,MAIbU,IAJa;AAAA,MAIPC,OAJO;;AAAA,uBAKST,aAAa,EALtB;AAAA,MAKZU,gBALY,kBAKZA,gBALY;;AAOpB,WAASC,MAAT,GAAkB;AACdJ,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH;;AAED,WAASM,KAAT,GAAiB;AACbT,IAAAA,UAAU;AACVE,IAAAA,UAAU,CAAC,CAAD,CAAV;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAEDR,EAAAA,SAAS,CAAC,YAAM;AACZc,IAAAA,OAAO,CAACC,GAAR,CAAYJ,gBAAZ;;AAEA,QAAGJ,QAAH,EAAa;AACT,UAAGF,OAAO,IAAI,CAAd,EAAiB;AACb,YAAGF,OAAO,GAAG,CAAb,EAAgB;AACZG,UAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,UAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACH;;AACD,YAAGA,OAAO,IAAI,CAAd,EAAiB;AACbG,UAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,UAAAA,UAAU,CAAC,CAAD,CAAV;AACH;AACJ;;AACD,UAAGC,OAAO,GAAG,CAAb,EAAgB;AACZW,QAAAA,UAAU,CAAC;AAAA,iBAAMV,UAAU,CAACD,OAAO,GAAG,CAAX,CAAhB;AAAA,SAAD,EAAgC,IAAhC,CAAV;AACAK,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH;AACJ;AAEJ,GApBQ,EAoBN,CAACF,QAAD,EAAWF,OAAX,EAAoBF,OAApB,CApBM,CAAT;AAsBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AASH,CAhDD;;GAAMD,S;UAK2BD,a;;;KAL3BC,S;AAkDN,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from 'react'\n\nimport { useLocalState } from '../components/LocalState'\n\nconst TimerPage = () => {\n    const [minutes, setMinutes] = useState(4)\n    const [seconds, setSeconds] = useState(0)\n    const [isActive, setIsActive] = useState(false)\n    const [tick, setTick] = useState(0)\n    const { roundInformation } = useLocalState()\n    \n    function toggle() {\n        setIsActive(!isActive)\n    }\n    \n    function reset() {\n        setMinutes()\n        setSeconds(0)\n        setIsActive(false)\n    }\n    \n    useEffect(() => {\n        console.log(roundInformation)\n\n        if(isActive) {\n            if(seconds == 0) {\n                if(minutes > 0) {\n                    setSeconds(59)\n                    setMinutes(minutes - 1)\n                }\n                if(minutes == 0) {\n                    setSeconds(59)\n                    setMinutes(3)\n                }\n            }\n            if(seconds > 0) {\n                setTimeout(() => setSeconds(seconds - 1), 1000)\n                setTick(tick + 1)\n            }\n        }\n\n    }, [isActive, seconds, minutes])\n\n    return (\n        <div>\n            <div className='athlete-list'>\n                \n            </div>\n            {/* <h1>{minutes} : {seconds < 10 ? `0${seconds}` : seconds}</h1>\n            <button onClick={toggle}>{isActive ? 'Stop' : 'Start'}</button> */}\n        </div>\n    )\n}\n\nexport default TimerPage"]},"metadata":{},"sourceType":"module"}