{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sam/Desktop/timer/next/components/Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { useLocalState } from './LocalState';\n\nvar Timer = function Timer() {\n  _s();\n\n  var _useState = useState(1),\n      minutes = _useState[0],\n      setMinutes = _useState[1];\n\n  var _useState2 = useState(0),\n      seconds = _useState2[0],\n      setSeconds = _useState2[1];\n\n  var _useState3 = useState(false),\n      isActive = _useState3[0],\n      setIsActive = _useState3[1];\n\n  var _useLocalState = useLocalState(),\n      athletes = _useLocalState.athletes,\n      inIso = _useLocalState.inIso,\n      setInIso = _useLocalState.setInIso,\n      onDeck = _useLocalState.onDeck,\n      setOnDeck = _useLocalState.setOnDeck,\n      climbing = _useLocalState.climbing,\n      setClimbing = _useLocalState.setClimbing,\n      finished = _useLocalState.finished,\n      setFinished = _useLocalState.setFinished,\n      nextIndex = _useLocalState.nextIndex,\n      setNextIndex = _useLocalState.setNextIndex;\n\n  function roundCycle() {\n    var currentOnDeck = onDeck;\n    var currentClimbing = climbing;\n    setClimbing(null);\n    setClimbing(_toConsumableArray(currentOnDeck));\n    currentClimbing.forEach(function (climber) {\n      climber.cycle();\n\n      if (climber.getLastBoulder() == true) {\n        setFinished([].concat(_toConsumableArray(finished), [climber]));\n      } else {\n        setOnDeck([].concat(_toConsumableArray(onDeck), [climber]));\n      }\n    });\n    setOnDeck([].concat(_toConsumableArray(onDeck), [inIso[nextIndex]]));\n    setNextIndex(nextIndex + 1);\n  }\n\n  function startRound() {\n    setInIso(_toConsumableArray(athletes));\n    setOnDeck([athletes[0]]);\n  }\n\n  function toggle() {\n    if (!isActive) {\n      startRound();\n    }\n\n    setIsActive(!isActive);\n  }\n\n  function reset() {\n    roundCycle();\n    setMinutes(1);\n    setSeconds(0);\n  } //timer control\n\n\n  useEffect(function () {\n    if (isActive) {\n      if (seconds == 0) {\n        if (minutes == 0) {\n          reset();\n        }\n\n        if (minutes > 0) {\n          setSeconds(10);\n          setMinutes(minutes - 1);\n        }\n      }\n\n      if (seconds > 0) {\n        setTimeout(function () {\n          return setSeconds(seconds - 1);\n        }, 1000);\n      }\n    }\n  }, [isActive, seconds, minutes]);\n  return __jsx(\"div\", {\n    className: \"timer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, minutes, \" : \", seconds < 10 ? \"0\".concat(seconds) : seconds), __jsx(\"button\", {\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, isActive ? 'Stop' : 'Start'));\n};\n\n_s(Timer, \"ZPLFOEZzd1cA+OtiNyKQo+NlQBM=\", false, function () {\n  return [useLocalState];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/sam/Desktop/timer/next/components/Timer.jsx"],"names":["useState","useEffect","useLocalState","Timer","minutes","setMinutes","seconds","setSeconds","isActive","setIsActive","athletes","inIso","setInIso","onDeck","setOnDeck","climbing","setClimbing","finished","setFinished","nextIndex","setNextIndex","roundCycle","currentOnDeck","currentClimbing","forEach","climber","cycle","getLastBoulder","startRound","toggle","reset","setTimeout"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useLocalState } from './LocalState'\n\nconst Timer = () => {\n\n    const [minutes, setMinutes] = useState(1)\n    const [seconds, setSeconds] = useState(0)\n    const [isActive, setIsActive] = useState(false)\n    const { athletes,\n            inIso, setInIso,\n            onDeck, setOnDeck,\n            climbing, setClimbing,\n            finished, setFinished,\n            nextIndex, setNextIndex    \n    } = useLocalState()\n\n    function roundCycle () {\n        let currentOnDeck = onDeck;\n        let currentClimbing = climbing;\n        \n        setClimbing(null)\n        setClimbing([...currentOnDeck])\n        currentClimbing.forEach(climber => {\n            climber.cycle()\n            if(climber.getLastBoulder() == true) {\n                setFinished([...finished, climber])\n            }\n            else {\n                setOnDeck([...onDeck, climber])\n            }\n        })\n        setOnDeck([...onDeck, inIso[nextIndex]])\n        setNextIndex(nextIndex + 1)\n    }\n\n    function startRound() {\n        setInIso([...athletes])\n        setOnDeck([athletes[0]])\n    }\n\n    function toggle() {\n        if(!isActive) {\n            startRound()\n        }\n        setIsActive(!isActive)\n    }\n\n    function reset() {\n        roundCycle()\n        setMinutes(1)\n        setSeconds(0)\n    }\n\n    //timer control\n    useEffect(() => {\n        if(isActive) {\n            if(seconds == 0) {\n                if(minutes == 0) {\n                    reset()\n                }\n                if(minutes > 0) {\n                    setSeconds(10)\n                    setMinutes(minutes - 1)\n                }\n            }\n            if(seconds > 0) {\n                setTimeout(() => setSeconds(seconds - 1), 1000)\n            }\n        }\n    }, [isActive, seconds, minutes])\n\n    return (\n    <div className='timer'>\n        <h1>{minutes} : {seconds < 10 ? `0${seconds}` : seconds}</h1>\n        <button onClick={toggle}>{isActive ? 'Stop' : 'Start'}</button>\n    </div>\n    )\n}\n\nexport default Timer"]},"metadata":{},"sourceType":"module"}