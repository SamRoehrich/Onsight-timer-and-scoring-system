{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/sam/Desktop/timer/next/components/LocalState.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createContext, useState, useContext, useReducer } from 'react';\nvar LocalStateContext = createContext();\nvar LocalStateProvider = LocalStateContext.Provider;\nvar initialState = {\n  athletes: [],\n  inIso: [],\n  onDeck: [],\n  climbing: [],\n  finished: []\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"start-round\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        athletes: action.payload,\n        inIso: action.payload\n      });\n\n    case 'remove-climber-from-iso':\n      var currentIso = [];\n      state.inIso.forEach(function (climber) {\n        return currentIso.push(climber);\n      });\n      var nextClimber = currentIso.shift();\n      console.log(nextClimber);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        inIso: currentIso,\n        onDeck: [].concat(_toConsumableArray(state.onDeck), [nextClimber])\n      });\n\n    case 'transition-climbers':\n      var currentClimbing = [];\n      var modifiedClimbing = [];\n      var currentOnDeck = [];\n      var currentFinished = state.finished;\n      currentIso = []; //fill temp arrays\n\n      state.climbing.forEach(function (climber) {\n        return currentClimbing.push(climber);\n      });\n      state.onDeck.forEach(function (climber) {\n        return currentOnDeck.push(climber);\n      });\n      state.inIso.forEach(function (climber) {\n        return currentIso.push(climber);\n      }); //modify current climbers\n\n      currentClimbing.map(function (climber) {\n        return climber.cycle();\n      });\n      currentClimbing.forEach(function (climber) {\n        if (climber.bouldersClimbed == 4) {\n          currentFinished = [].concat(_toConsumableArray(currentFinished), [climber]);\n        } else {\n          modifiedClimbing.push(climber);\n        }\n      }); //get next climber\n\n      var next = currentIso.shift();\n      next.setStartedClimbing();\n\n      if (next !== undefined) {\n        modifiedClimbing = [].concat(_toConsumableArray(modifiedClimbing), [next]);\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        climbing: currentOnDeck,\n        onDeck: modifiedClimbing,\n        inIso: currentIso,\n        finished: currentFinished\n      });\n\n    case 'reset':\n      state = initialState;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        athletes: action.payload,\n        inIso: action.payload\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction LocalState(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState({}),\n      roundInformation = _useState[0],\n      setRoundInformation = _useState[1];\n\n  var _useState2 = useState([]),\n      athletes = _useState2[0],\n      setAthletes = _useState2[1];\n\n  var _useReducer = useReducer(reducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  function setLocalStateRoundInformation(roundInfo) {\n    setRoundInformation(roundInfo);\n  }\n\n  var defaultValues = {\n    roundInformation: roundInformation,\n    setLocalStateRoundInformation: setLocalStateRoundInformation,\n    athletes: athletes,\n    setAthletes: setAthletes,\n    reducerState: state,\n    dispatch: dispatch\n  };\n  return __jsx(LocalStateProvider, {\n    value: defaultValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }\n  }, children);\n}\n\n_s(LocalState, \"5K25b9WwnD3xlxiFTWXIb6NRKtw=\");\n\n_c = LocalState;\n\nfunction useLocalState() {\n  _s2();\n\n  var all = useContext(LocalStateContext);\n  return all;\n}\n\n_s2(useLocalState, \"k0r6hllA0ZVFTbsvyQUS1AVLOSY=\");\n\nexport { LocalState, LocalStateContext, useLocalState };\n\nvar _c;\n\n$RefreshReg$(_c, \"LocalState\");","map":{"version":3,"sources":["/Users/sam/Desktop/timer/next/components/LocalState.js"],"names":["createContext","useState","useContext","useReducer","LocalStateContext","LocalStateProvider","Provider","initialState","athletes","inIso","onDeck","climbing","finished","reducer","state","action","type","payload","currentIso","forEach","climber","push","nextClimber","shift","console","log","currentClimbing","modifiedClimbing","currentOnDeck","currentFinished","map","cycle","bouldersClimbed","next","setStartedClimbing","undefined","LocalState","children","roundInformation","setRoundInformation","setAthletes","dispatch","setLocalStateRoundInformation","roundInfo","defaultValues","reducerState","useLocalState","all"],"mappings":"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","sourcesContent":["import { createContext, useState, useContext, useReducer } from 'react'\n\nconst LocalStateContext = createContext()\n\nconst LocalStateProvider = LocalStateContext.Provider\n\nconst initialState = {\n    athletes: [],\n    inIso: [],\n    onDeck: [],\n    climbing: [],\n    finished: [],\n}\n\nfunction reducer(state, action) {\n    switch(action.type) {\n        case \"start-round\":\n            return { ...state, athletes: action.payload, inIso: action.payload};\n        case 'remove-climber-from-iso':\n            let currentIso = []\n            state.inIso.forEach(climber => currentIso.push(climber))\n            let nextClimber = currentIso.shift()\n            console.log(nextClimber)\n            return {\n                ...state,\n                inIso: currentIso,\n                onDeck: [...state.onDeck, nextClimber]\n            };\n        case 'transition-climbers':\n            let currentClimbing = []\n            let modifiedClimbing = []\n            let currentOnDeck = []\n            let currentFinished = state.finished\n            currentIso = []\n            //fill temp arrays\n            state.climbing.forEach(climber => currentClimbing.push(climber))\n            state.onDeck.forEach(climber => currentOnDeck.push(climber))\n            state.inIso.forEach(climber => currentIso.push(climber))\n            //modify current climbers\n            currentClimbing.map(climber => climber.cycle())\n            currentClimbing.forEach(climber => {\n                if(climber.bouldersClimbed == 4) {\n                    currentFinished = [...currentFinished, climber]\n                } else {\n                    modifiedClimbing.push(climber)\n                }\n            })\n            //get next climber\n            let next = currentIso.shift()\n            next.setStartedClimbing()\n            if(next !== undefined) {\n                modifiedClimbing = [...modifiedClimbing, next]\n            }\n            return {\n                ...state,\n                climbing: currentOnDeck,\n                onDeck: modifiedClimbing,\n                inIso: currentIso,\n                finished: currentFinished\n            };\n        case 'reset':\n            state = initialState\n            return {\n                ...state,\n                athletes: action.payload,\n                inIso: action.payload\n            }\n        default: \n            return state;\n    }\n}\n\nfunction LocalState({children}) {\n    const [roundInformation, setRoundInformation] = useState({})\n    const [athletes, setAthletes] = useState([])\n    const [state, dispatch] = useReducer(reducer, initialState)\n\n    function setLocalStateRoundInformation(roundInfo) {\n        setRoundInformation(roundInfo)\n    }\n\n    const defaultValues = {\n        roundInformation, setLocalStateRoundInformation,\n        athletes, setAthletes,\n        reducerState: state,\n        dispatch\n    }\n\n    return <LocalStateProvider value={defaultValues}>\n                {children}\n            </LocalStateProvider>\n}\n\nfunction useLocalState() {\n    const all = useContext(LocalStateContext)\n    return all\n}\n\nexport { LocalState, LocalStateContext, useLocalState }"]},"metadata":{},"sourceType":"module"}