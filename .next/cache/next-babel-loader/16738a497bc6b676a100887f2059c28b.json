{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/timer/next/components/Transition.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useReducer, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useLocalState } from './LocalState';\nconst initialState = {\n  athletes: [],\n  inIso: [],\n  onDeck: [],\n  climbing: [],\n  finished: []\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"start-round\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        athletes: action.payload\n      });\n\n    default:\n      return state;\n  }\n}\n\nconst Container = styled.div`\n    height: 50%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n`;\n\nconst RoundControl = () => {\n  const {\n    athletes\n  } = useLocalState();\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    onClick: () => dispatch({\n      type: 'start-round',\n      payload: athletes\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Start Round\"));\n};\n\nexport default RoundControl;","map":{"version":3,"sources":["/Users/sam/Desktop/timer/next/components/Transition.jsx"],"names":["useReducer","useCallback","styled","useLocalState","initialState","athletes","inIso","onDeck","climbing","finished","reducer","state","action","type","payload","Container","div","RoundControl","dispatch"],"mappings":";;;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,MAAM,EAAE,EAHS;AAIjBC,EAAAA,QAAQ,EAAE,EAJO;AAKjBC,EAAAA,QAAQ,EAAE;AALO,CAArB;;AAQA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,aAAL;AACI,6CAAYF,KAAZ;AAAmBN,QAAAA,QAAQ,EAAEO,MAAM,CAACE;AAApC;;AACJ;AACI,aAAOH,KAAP;AAJR;AAMH;;AAED,MAAMI,SAAS,GAAGb,MAAM,CAACc,GAAI;;;;;CAA7B;;AAOA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAM;AAAEZ,IAAAA;AAAF,MAAeF,aAAa,EAAlC;AACA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQO;AAAR,MAAoBlB,UAAU,CAACU,OAAD,EAAUN,YAAV,CAApC;AAEA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAE,MAAMc,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAET;AAAhC,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ;AAMH,CAVD;;AAYA,eAAeY,YAAf","sourcesContent":["import { useReducer, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { useLocalState } from './LocalState'\n\nconst initialState = {\n    athletes: [],\n    inIso: [],\n    onDeck: [],\n    climbing: [],\n    finished: [],\n}\n\nfunction reducer(state, action) {\n    switch(action.type) {\n        case(\"start-round\"):\n            return { ...state, athletes: action.payload};\n        default: \n            return state;\n    }\n}\n\nconst Container = styled.div`\n    height: 50%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n`\n\nconst RoundControl = () => {\n    const { athletes } = useLocalState()\n    const [state, dispatch] = useReducer(reducer, initialState)\n \n    return (\n        <Container>\n            <button onClick={() => dispatch({ type: 'start-round', payload: athletes})}>Start Round</button>\n        </Container>\n\n    )\n}\n\nexport default RoundControl"]},"metadata":{},"sourceType":"module"}