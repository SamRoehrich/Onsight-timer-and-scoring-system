{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/timer/next/components/Timer.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { useLocalState } from './LocalState';\n\nconst Timer = () => {\n  const {\n    0: minutes,\n    1: setMinutes\n  } = useState(1);\n  const {\n    0: seconds,\n    1: setSeconds\n  } = useState(0);\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  const {\n    athletes,\n    inIso,\n    setInIso,\n    onDeck,\n    setOnDeck,\n    climbing,\n    setClimbing,\n    setFinished\n  } = useLocalState();\n\n  function startRound() {\n    console.log('start called');\n    setInIso(...athletes);\n    setOnDeck(inIso[0]);\n  }\n\n  function toggle() {\n    setIsActive(!isActive);\n\n    if (isActive) {\n      startRound();\n    }\n  }\n\n  function reset() {\n    setClimbing(...onDeck);\n    setMinutes(1);\n    setSeconds(0);\n  } //timer control\n\n\n  useEffect(() => {\n    if (isActive) {\n      if (seconds == 0) {\n        if (minutes == 0) {\n          reset();\n        }\n\n        if (minutes > 0) {\n          setSeconds(10);\n          setMinutes(minutes - 1);\n        }\n      }\n\n      if (seconds > 0) {\n        setTimeout(() => setSeconds(seconds - 1), 1000);\n      }\n    }\n  }, [isActive, seconds, minutes]);\n  return __jsx(\"div\", {\n    className: \"timer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, minutes, \" : \", seconds < 10 ? `0${seconds}` : seconds), __jsx(\"button\", {\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, isActive ? 'Stop' : 'Start'));\n};\n\nexport default Timer;","map":{"version":3,"sources":["/Users/sam/Desktop/timer/next/components/Timer.jsx"],"names":["useState","useEffect","useLocalState","Timer","minutes","setMinutes","seconds","setSeconds","isActive","setIsActive","athletes","inIso","setInIso","onDeck","setOnDeck","climbing","setClimbing","setFinished","startRound","console","log","toggle","reset","setTimeout"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,cAA9B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAEhB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBL,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM;AAAA,OAACQ,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAEU,IAAAA,QAAF;AACEC,IAAAA,KADF;AACSC,IAAAA,QADT;AAEEC,IAAAA,MAFF;AAEUC,IAAAA,SAFV;AAGEC,IAAAA,QAHF;AAGYC,IAAAA,WAHZ;AAIEC,IAAAA;AAJF,MAKFf,aAAa,EALjB;;AAOA,WAASgB,UAAT,GAAsB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAR,IAAAA,QAAQ,CAAC,GAAGF,QAAJ,CAAR;AACAI,IAAAA,SAAS,CAACH,KAAK,CAAC,CAAD,CAAN,CAAT;AACH;;AAED,WAASU,MAAT,GAAkB;AACdZ,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;;AACA,QAAGA,QAAH,EAAa;AACTU,MAAAA,UAAU;AACb;AACJ;;AAED,WAASI,KAAT,GAAiB;AACbN,IAAAA,WAAW,CAAC,GAAGH,MAAJ,CAAX;AACAR,IAAAA,UAAU,CAAC,CAAD,CAAV;AACAE,IAAAA,UAAU,CAAC,CAAD,CAAV;AACH,GA7Be,CA+BhB;;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGO,QAAH,EAAa;AACT,UAAGF,OAAO,IAAI,CAAd,EAAiB;AACb,YAAGF,OAAO,IAAI,CAAd,EAAiB;AACbkB,UAAAA,KAAK;AACR;;AACD,YAAGlB,OAAO,GAAG,CAAb,EAAgB;AACZG,UAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,UAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACH;AACJ;;AACD,UAAGE,OAAO,GAAG,CAAb,EAAgB;AACZiB,QAAAA,UAAU,CAAC,MAAMhB,UAAU,CAACD,OAAO,GAAG,CAAX,CAAjB,EAAgC,IAAhC,CAAV;AACH;AACJ;AACJ,GAfQ,EAeN,CAACE,QAAD,EAAWF,OAAX,EAAoBF,OAApB,CAfM,CAAT;AAiBA,SACA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAL,SAAiBE,OAAO,GAAG,EAAV,GAAgB,IAAGA,OAAQ,EAA3B,GAA+BA,OAAhD,CADJ,EAEI;AAAQ,IAAA,OAAO,EAAEe,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0Bb,QAAQ,GAAG,MAAH,GAAY,OAA9C,CAFJ,CADA;AAMH,CAvDD;;AAyDA,eAAeL,KAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useLocalState } from './LocalState'\n\nconst Timer = () => {\n\n    const [minutes, setMinutes] = useState(1)\n    const [seconds, setSeconds] = useState(0)\n    const [isActive, setIsActive] = useState(false)\n    const { athletes,\n            inIso, setInIso,\n            onDeck, setOnDeck,\n            climbing, setClimbing,\n            setFinished    \n    } = useLocalState()\n\n    function startRound() {\n        console.log('start called')\n        setInIso(...athletes)\n        setOnDeck(inIso[0])\n    }\n\n    function toggle() {\n        setIsActive(!isActive)\n        if(isActive) {\n            startRound()\n        }\n    }\n\n    function reset() {\n        setClimbing(...onDeck)\n        setMinutes(1)\n        setSeconds(0)\n    }\n\n    //timer control\n    useEffect(() => {\n        if(isActive) {\n            if(seconds == 0) {\n                if(minutes == 0) {\n                    reset()\n                }\n                if(minutes > 0) {\n                    setSeconds(10)\n                    setMinutes(minutes - 1)\n                }\n            }\n            if(seconds > 0) {\n                setTimeout(() => setSeconds(seconds - 1), 1000)\n            }\n        }\n    }, [isActive, seconds, minutes])\n\n    return (\n    <div className='timer'>\n        <h1>{minutes} : {seconds < 10 ? `0${seconds}` : seconds}</h1>\n        <button onClick={toggle}>{isActive ? 'Stop' : 'Start'}</button>\n    </div>\n    )\n}\n\nexport default Timer"]},"metadata":{},"sourceType":"module"}