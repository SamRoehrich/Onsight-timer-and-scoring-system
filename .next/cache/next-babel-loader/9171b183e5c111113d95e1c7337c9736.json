{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/sam/Desktop/timer/next/components/Scoring.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useLocalState } from './LocalState';\nimport { useEffect, useRef } from 'react';\nimport ScoreCard from \"./ScoreCard\";\n\nvar Scoring = function Scoring() {\n  _s();\n\n  var _useLocalState = useLocalState(),\n      climbing = _useLocalState.climbing,\n      onDeck = _useLocalState.onDeck,\n      inIso = _useLocalState.inIso;\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, climbing.map(function (climber, i) {\n    return __jsx(ScoreCard, {\n      athlete: climber,\n      key: \"athlete-\".concat(i),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }\n    });\n  }));\n};\n\n_s(Scoring, \"Pizw2zeMR8RJ52vPMc3hFpSJZcA=\", false, function () {\n  return [useLocalState];\n});\n\n_c = Scoring;\nexport default Scoring; //get index of active athlete from timer page and render scorecard for each athlete based on that index\n\nvar _c;\n\n$RefreshReg$(_c, \"Scoring\");","map":{"version":3,"sources":["/Users/sam/Desktop/timer/next/components/Scoring.jsx"],"names":["useLocalState","useEffect","useRef","ScoreCard","Scoring","climbing","onDeck","inIso","map","climber","i"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,uBACgBJ,aAAa,EAD7B;AAAA,MACZK,QADY,kBACZA,QADY;AAAA,MACFC,MADE,kBACFA,MADE;AAAA,MACMC,KADN,kBACMA,KADN;;AAElB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQF,QAAQ,CAACG,GAAT,CAAa,UAACC,OAAD,EAAUC,CAAV;AAAA,WACT,MAAC,SAAD;AAAW,MAAA,OAAO,EAAED,OAApB;AAA6B,MAAA,GAAG,oBAAaC,CAAb,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS;AAAA,GAAb,CAFR,CADJ;AASH,CAXD;;GAAMN,O;UACgCJ,a;;;KADhCI,O;AAaN,eAAeA,OAAf,C,CAEA","sourcesContent":["import { useLocalState } from './LocalState'\nimport { useEffect, useRef } from 'react'\n\nimport ScoreCard from \"./ScoreCard\"\n\nconst Scoring = () => {\n    let { climbing, onDeck, inIso } = useLocalState()\n    return(\n        <div>  \n            {\n                climbing.map((climber, i) => (\n                    <ScoreCard athlete={climber} key={`athlete-${i}`} />\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Scoring\n\n//get index of active athlete from timer page and render scorecard for each athlete based on that index"]},"metadata":{},"sourceType":"module"}