{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/timer/next/components/Transition.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useReducer, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useLocalState } from './LocalState';\nconst Container = styled.div`\n    height: 50%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n`;\nconst initialState = {\n  athletes: [],\n  inIso: [],\n  onDeck: [],\n  climbing: [],\n  finished: []\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"start-round\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        athletes: action.payload,\n        inIso: action.payload\n      });\n\n    case 'remove-climber-from-iso':\n      let currentIso = [];\n      state.inIso.forEach(climber => currentIso.push(climber));\n      let nextClimber = currentIso.shift();\n      console.log(nextClimber);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        inIso: currentIso,\n        onDeck: [...state.onDeck, nextClimber]\n      });\n\n    case 'transition-climbers':\n      let currentClimbing = [];\n      let currentOnDeck = [];\n      let currentFinished = state.finished;\n      currentIso = []; //fill temp arrays\n\n      state.climbing.forEach(climber => currentClimbing.push(climber));\n      state.onDeck.forEach(climber => currentOnDeck.push(climber));\n      state.inIso.forEach(climber => currentIso.push(climber)); //modify current climbers\n\n      currentClimbing.map(climber => climber.cycle());\n      currentClimbing.forEach((climber, idx) => {\n        if (climber.bouldersClimbed == 4) {\n          currentFinished = [...currentFinished, climber];\n          currentClimbing.splice(idx, 0);\n        }\n      }); //get next climber\n\n      let next = currentIso.shift();\n\n      if (next !== undefined) {\n        currentClimbing = [...currentClimbing, next];\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        climbing: currentOnDeck,\n        onDeck: currentClimbing,\n        inIso: currentIso,\n        finished: currentFinished\n      });\n\n    case 'reset':\n      state = initialState;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        athletes: action.payload,\n        inIso: action.payload\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction cycleClimbers(dispatch) {\n  return null;\n}\n\nconst RoundControl = () => {\n  const {\n    athletes\n  } = useLocalState();\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    onClick: () => dispatch({\n      type: 'reset',\n      payload: athletes\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Reset Round\"), __jsx(\"button\", {\n    onClick: () => dispatch({\n      type: 'start-round',\n      payload: athletes\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Start Round\"), __jsx(\"button\", {\n    onClick: () => dispatch({\n      type: 'remove-climber-from-iso'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Get first climber\"), __jsx(\"button\", {\n    onClick: () => dispatch({\n      type: 'transition-climbers'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Cycle Climbers\"));\n};\n\nexport default RoundControl;","map":{"version":3,"sources":["/Users/sam/Desktop/timer/next/components/Transition.jsx"],"names":["useReducer","useCallback","styled","useLocalState","Container","div","initialState","athletes","inIso","onDeck","climbing","finished","reducer","state","action","type","payload","currentIso","forEach","climber","push","nextClimber","shift","console","log","currentClimbing","currentOnDeck","currentFinished","map","cycle","idx","bouldersClimbed","splice","next","undefined","cycleClimbers","dispatch","RoundControl"],"mappings":"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","sourcesContent":["import { useReducer, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { useLocalState } from './LocalState'\n\nconst Container = styled.div`\n    height: 50%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n`\n\nconst initialState = {\n    athletes: [],\n    inIso: [],\n    onDeck: [],\n    climbing: [],\n    finished: [],\n}\n\nfunction reducer(state, action) {\n    switch(action.type) {\n        case \"start-round\":\n            return { ...state, athletes: action.payload, inIso: action.payload};\n        case 'remove-climber-from-iso':\n            let currentIso = []\n            state.inIso.forEach(climber => currentIso.push(climber))\n            let nextClimber = currentIso.shift()\n            console.log(nextClimber)\n            return {\n                ...state,\n                inIso: currentIso,\n                onDeck: [...state.onDeck, nextClimber]\n            };\n        case 'transition-climbers':\n            let currentClimbing = []\n            let currentOnDeck = []\n            let currentFinished = state.finished\n            currentIso = []\n            //fill temp arrays\n            state.climbing.forEach(climber => currentClimbing.push(climber))\n            state.onDeck.forEach(climber => currentOnDeck.push(climber))\n            state.inIso.forEach(climber => currentIso.push(climber))\n            //modify current climbers\n            currentClimbing.map(climber => climber.cycle())\n            currentClimbing.forEach((climber, idx) => {\n                if(climber.bouldersClimbed == 4) {\n                    currentFinished = [...currentFinished, climber];\n                    currentClimbing.splice(idx, 0)\n                }\n            })\n            //get next climber\n            let next = currentIso.shift()\n            if(next !== undefined) {\n                currentClimbing = [...currentClimbing, next]\n            }\n            return {\n                ...state,\n                climbing: currentOnDeck,\n                onDeck: currentClimbing,\n                inIso: currentIso,\n                finished: currentFinished\n            };\n        case 'reset':\n            state = initialState\n            return {\n                ...state,\n                athletes: action.payload,\n                inIso: action.payload\n            }\n        default: \n            return state;\n    }\n}\n\nfunction cycleClimbers(dispatch) {\n    return null\n}\n\nconst RoundControl = () => {\n    const { athletes } = useLocalState()\n    const [state, dispatch] = useReducer(reducer, initialState)\n    \n    return (\n        <Container>\n            <button onClick={() => dispatch({ type: 'reset', payload: athletes})}>Reset Round</button>\n            <button onClick={() => dispatch({ type: 'start-round', payload: athletes})}>Start Round</button>\n            <button onClick={() => dispatch({ type: 'remove-climber-from-iso'})}>Get first climber</button>\n            <button onClick={() => dispatch({ type: 'transition-climbers'})}>Cycle Climbers</button>\n        </Container>\n\n    )\n}\n\nexport default RoundControl"]},"metadata":{},"sourceType":"module"}