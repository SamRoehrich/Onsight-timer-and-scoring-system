{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/timer/next/components/Scoring.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useLocalState } from './LocalState';\nimport { useEffect, useRef } from 'react';\nimport ScoreCard from \"./ScoreCard\";\n\nconst Scoring = () => {\n  let {\n    climbing,\n    onDeck,\n    inIso\n  } = useLocalState();\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, climbing.map((climber, i) => __jsx(ScoreCard, {\n    athlete: climber,\n    key: `athlete-${i}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default Scoring; //get index of active athlete from timer page and render scorecard for each athlete based on that index","map":{"version":3,"sources":["/Users/sam/Desktop/timer/next/components/Scoring.jsx"],"names":["useLocalState","useEffect","useRef","ScoreCard","Scoring","climbing","onDeck","inIso","map","climber","i"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,MAAI;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,MAA8BP,aAAa,EAA/C;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQK,QAAQ,CAACG,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,KACT,MAAC,SAAD;AAAW,IAAA,OAAO,EAAED,OAApB;AAA6B,IAAA,GAAG,EAAG,WAAUC,CAAE,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFR,CADJ;AASH,CAXD;;AAaA,eAAeN,OAAf,C,CAEA","sourcesContent":["import { useLocalState } from './LocalState'\nimport { useEffect, useRef } from 'react'\n\nimport ScoreCard from \"./ScoreCard\"\n\nconst Scoring = () => {\n    let { climbing, onDeck, inIso } = useLocalState()\n    return(\n        <div>  \n            {\n                climbing.map((climber, i) => (\n                    <ScoreCard athlete={climber} key={`athlete-${i}`} />\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Scoring\n\n//get index of active athlete from timer page and render scorecard for each athlete based on that index"]},"metadata":{},"sourceType":"module"}