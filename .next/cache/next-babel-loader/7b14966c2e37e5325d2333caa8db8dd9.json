{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/timer/next/components/Scoring.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useLocalState } from './LocalState';\nimport { useEffect, useRef } from 'react';\nimport ScoreCard from \"./ScoreCard\";\n\nconst Scoring = ({\n  activeClimbers\n}) => {\n  let {\n    athletes,\n    setAthletes,\n    onDeck,\n    setOnDeck,\n    climbing,\n    setClimbing,\n    finished,\n    setFinished\n  } = useLocalState();\n  const onDeckEl = useRef(null);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    ref: onDeckEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Scoring; //get index of active athlete from timer page and render scorecard for each athlete based on that index","map":{"version":3,"sources":["/Users/sam/Desktop/timer/next/components/Scoring.jsx"],"names":["useLocalState","useEffect","useRef","ScoreCard","Scoring","activeClimbers","athletes","setAthletes","onDeck","setOnDeck","climbing","setClimbing","finished","setFinished","onDeckEl"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAEpC,MAAI;AACAC,IAAAA,QADA;AACUC,IAAAA,WADV;AAEAC,IAAAA,MAFA;AAEQC,IAAAA,SAFR;AAGAC,IAAAA,QAHA;AAGUC,IAAAA,WAHV;AAIAC,IAAAA,QAJA;AAIUC,IAAAA;AAJV,MAKAb,aAAa,EALjB;AAMA,QAAMc,QAAQ,GAAGZ,MAAM,CAAC,IAAD,CAAvB;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,GAAG,EAAEY,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AASH,CAnBD;;AAqBA,eAAeV,OAAf,C,CAEA","sourcesContent":["import { useLocalState } from './LocalState'\nimport { useEffect, useRef } from 'react'\n\nimport ScoreCard from \"./ScoreCard\"\n\nconst Scoring = ({ activeClimbers }) => {\n\n    let {\n        athletes, setAthletes,\n        onDeck, setOnDeck,\n        climbing, setClimbing,\n        finished, setFinished\n    } = useLocalState()\n    const onDeckEl = useRef(null)\n\n    return(\n        <div>\n        \n            <div ref={onDeckEl}>\n\n            </div>\n        \n        </div>\n    )\n}\n\nexport default Scoring\n\n//get index of active athlete from timer page and render scorecard for each athlete based on that index"]},"metadata":{},"sourceType":"module"}