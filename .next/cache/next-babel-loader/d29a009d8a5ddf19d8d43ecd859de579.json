{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/timer/next/components/Transition.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useReducer, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useLocalState } from './LocalState';\nimport ScoreCard from './ScoreCard';\nconst Container = styled.div`\n    height: 50%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n`;\n\nconst RoundControl = () => {\n  const {\n    athletes,\n    dispatch\n  } = useLocalState();\n  return __jsx(React.Fragment, null, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    onClick: () => dispatch({\n      type: 'reset',\n      payload: athletes\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Reset Round\"), __jsx(\"button\", {\n    onClick: () => dispatch({\n      type: 'start-round',\n      payload: athletes\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Start Round\"), __jsx(\"button\", {\n    onClick: () => dispatch({\n      type: 'remove-climber-from-iso'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Get first climber\"), __jsx(\"button\", {\n    onClick: () => dispatch({\n      type: 'transition-climbers'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Cycle Climbers\")), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, state.climbing.length !== 0 && state.climbing.map(climber => __jsx(ScoreCard, {\n    athlete: climber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default RoundControl;","map":{"version":3,"sources":["/Users/sam/Desktop/timer/next/components/Transition.jsx"],"names":["useReducer","useCallback","styled","useLocalState","ScoreCard","Container","div","RoundControl","athletes","dispatch","type","payload","state","climbing","length","map","climber"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;;;;;CAA7B;;AAOA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBN,aAAa,EAA5C;AAEA,SACI,4BACA,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAE,MAAMM,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,OAAO,EAAEH;AAA1B,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAEH;AAAhC,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHJ,EAII;AAAQ,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,CADA,EAOA,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIE,KAAK,CAACC,QAAN,CAAeC,MAAf,KAA0B,CAA1B,IACAF,KAAK,CAACC,QAAN,CAAeE,GAAf,CAAmBC,OAAO,IACtB,MAAC,SAAD;AAAW,IAAA,OAAO,EAAEA,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHJ,CAPA,CADJ;AAkBH,CArBD;;AAuBA,eAAeT,YAAf","sourcesContent":["import { useReducer, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { useLocalState } from './LocalState'\nimport ScoreCard from './ScoreCard'\n\nconst Container = styled.div`\n    height: 50%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n`\n\nconst RoundControl = () => {\n    const { athletes, dispatch } = useLocalState()\n    \n    return (\n        <>\n        <Container>\n            <button onClick={() => dispatch({ type: 'reset', payload: athletes})}>Reset Round</button>\n            <button onClick={() => dispatch({ type: 'start-round', payload: athletes})}>Start Round</button>\n            <button onClick={() => dispatch({ type: 'remove-climber-from-iso'})}>Get first climber</button>\n            <button onClick={() => dispatch({ type: 'transition-climbers'})}>Cycle Climbers</button>\n        </Container>\n        <Container>\n        {\n            state.climbing.length !== 0 && \n            state.climbing.map(climber => (\n                <ScoreCard athlete={climber} />\n            ))\n        }\n        </Container>\n        </>\n    )\n}\n\nexport default RoundControl"]},"metadata":{},"sourceType":"module"}