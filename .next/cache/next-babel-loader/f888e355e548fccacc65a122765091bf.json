{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/sam/Desktop/timer/next/components/Scoring.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useLocalState } from './LocalState';\nimport { useEffect, useRef } from 'react';\nimport ScoreCard from \"./ScoreCard\";\n\nvar Scoring = function Scoring(_ref) {\n  _s();\n\n  var activeClimbers = _ref.activeClimbers;\n\n  var _useLocalState = useLocalState(),\n      athletes = _useLocalState.athletes,\n      setAthletes = _useLocalState.setAthletes,\n      onDeck = _useLocalState.onDeck,\n      setOnDeck = _useLocalState.setOnDeck,\n      climbing = _useLocalState.climbing,\n      setClimbing = _useLocalState.setClimbing,\n      finished = _useLocalState.finished,\n      setFinished = _useLocalState.setFinished;\n\n  var onDeckEl = useRef(null);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    ref: onDeckEl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(Scoring, \"Dqas3YPOF0ORJu9nmIpdb1lpzUE=\", false, function () {\n  return [useLocalState];\n});\n\n_c = Scoring;\nexport default Scoring; //get index of active athlete from timer page and render scorecard for each athlete based on that index\n\nvar _c;\n\n$RefreshReg$(_c, \"Scoring\");","map":{"version":3,"sources":["/Users/sam/Desktop/timer/next/components/Scoring.jsx"],"names":["useLocalState","useEffect","useRef","ScoreCard","Scoring","activeClimbers","athletes","setAthletes","onDeck","setOnDeck","climbing","setClimbing","finished","setFinished","onDeckEl"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAwB;AAAA;;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;;AAAA,uBAOhCL,aAAa,EAPmB;AAAA,MAGhCM,QAHgC,kBAGhCA,QAHgC;AAAA,MAGtBC,WAHsB,kBAGtBA,WAHsB;AAAA,MAIhCC,MAJgC,kBAIhCA,MAJgC;AAAA,MAIxBC,SAJwB,kBAIxBA,SAJwB;AAAA,MAKhCC,QALgC,kBAKhCA,QALgC;AAAA,MAKtBC,WALsB,kBAKtBA,WALsB;AAAA,MAMhCC,QANgC,kBAMhCA,QANgC;AAAA,MAMtBC,WANsB,kBAMtBA,WANsB;;AAQpC,MAAMC,QAAQ,GAAGZ,MAAM,CAAC,IAAD,CAAvB;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,GAAG,EAAEY,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AASH,CAnBD;;GAAMV,O;UAOEJ,a;;;KAPFI,O;AAqBN,eAAeA,OAAf,C,CAEA","sourcesContent":["import { useLocalState } from './LocalState'\nimport { useEffect, useRef } from 'react'\n\nimport ScoreCard from \"./ScoreCard\"\n\nconst Scoring = ({ activeClimbers }) => {\n\n    let {\n        athletes, setAthletes,\n        onDeck, setOnDeck,\n        climbing, setClimbing,\n        finished, setFinished\n    } = useLocalState()\n    const onDeckEl = useRef(null)\n\n    return(\n        <div>\n        \n            <div ref={onDeckEl}>\n\n            </div>\n        \n        </div>\n    )\n}\n\nexport default Scoring\n\n//get index of active athlete from timer page and render scorecard for each athlete based on that index"]},"metadata":{},"sourceType":"module"}