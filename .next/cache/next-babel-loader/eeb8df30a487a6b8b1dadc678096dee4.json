{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/timer/next/pages/timer.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { useLocalState } from '../components/LocalState';\n\nconst TimerPage = () => {\n  const {\n    0: minutes,\n    1: setMinutes\n  } = useState(4);\n  const {\n    0: seconds,\n    1: setSeconds\n  } = useState(0);\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  const {\n    0: tick,\n    1: setTick\n  } = useState(0);\n  const {\n    roundInformation\n  } = useLocalState();\n\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function reset() {\n    setMinutes();\n    setSeconds(0);\n    setIsActive(false);\n  }\n\n  useEffect(() => {\n    console.log(roundInformation);\n\n    if (isActive) {\n      if (seconds == 0) {\n        if (minutes > 0) {\n          setSeconds(59);\n          setMinutes(minutes - 1);\n        }\n\n        if (minutes == 0) {\n          setSeconds(59);\n          setMinutes(3);\n        }\n      }\n\n      if (seconds > 0) {\n        setTimeout(() => setSeconds(seconds - 1), 1000);\n        setTick(tick + 1);\n      }\n    }\n  }, [isActive, seconds, minutes]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"athlete-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default TimerPage;","map":{"version":3,"sources":["/Users/sam/Desktop/timer/next/pages/timer.js"],"names":["useState","useEffect","useLocalState","TimerPage","minutes","setMinutes","seconds","setSeconds","isActive","setIsActive","tick","setTick","roundInformation","toggle","reset","console","log","setTimeout"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAASC,aAAT,QAA8B,0BAA9B;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBL,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM;AAAA,OAACQ,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAA,OAACU,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAuBV,aAAa,EAA1C;;AAEA,WAASW,MAAT,GAAkB;AACdJ,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH;;AAED,WAASM,KAAT,GAAiB;AACbT,IAAAA,UAAU;AACVE,IAAAA,UAAU,CAAC,CAAD,CAAV;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAEDR,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,OAAO,CAACC,GAAR,CAAYJ,gBAAZ;;AAEA,QAAGJ,QAAH,EAAa;AACT,UAAGF,OAAO,IAAI,CAAd,EAAiB;AACb,YAAGF,OAAO,GAAG,CAAb,EAAgB;AACZG,UAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,UAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACH;;AACD,YAAGA,OAAO,IAAI,CAAd,EAAiB;AACbG,UAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,UAAAA,UAAU,CAAC,CAAD,CAAV;AACH;AACJ;;AACD,UAAGC,OAAO,GAAG,CAAb,EAAgB;AACZW,QAAAA,UAAU,CAAC,MAAMV,UAAU,CAACD,OAAO,GAAG,CAAX,CAAjB,EAAgC,IAAhC,CAAV;AACAK,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH;AACJ;AAEJ,GApBQ,EAoBN,CAACF,QAAD,EAAWF,OAAX,EAAoBF,OAApB,CApBM,CAAT;AAsBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AASH,CAhDD;;AAkDA,eAAeD,SAAf","sourcesContent":["import { useState, useEffect } from 'react'\n\nimport { useLocalState } from '../components/LocalState'\n\nconst TimerPage = () => {\n    const [minutes, setMinutes] = useState(4)\n    const [seconds, setSeconds] = useState(0)\n    const [isActive, setIsActive] = useState(false)\n    const [tick, setTick] = useState(0)\n    const { roundInformation } = useLocalState()\n    \n    function toggle() {\n        setIsActive(!isActive)\n    }\n    \n    function reset() {\n        setMinutes()\n        setSeconds(0)\n        setIsActive(false)\n    }\n    \n    useEffect(() => {\n        console.log(roundInformation)\n\n        if(isActive) {\n            if(seconds == 0) {\n                if(minutes > 0) {\n                    setSeconds(59)\n                    setMinutes(minutes - 1)\n                }\n                if(minutes == 0) {\n                    setSeconds(59)\n                    setMinutes(3)\n                }\n            }\n            if(seconds > 0) {\n                setTimeout(() => setSeconds(seconds - 1), 1000)\n                setTick(tick + 1)\n            }\n        }\n\n    }, [isActive, seconds, minutes])\n\n    return (\n        <div>\n            <div className='athlete-list'>\n                \n            </div>\n            {/* <h1>{minutes} : {seconds < 10 ? `0${seconds}` : seconds}</h1>\n            <button onClick={toggle}>{isActive ? 'Stop' : 'Start'}</button> */}\n        </div>\n    )\n}\n\nexport default TimerPage"]},"metadata":{},"sourceType":"module"}