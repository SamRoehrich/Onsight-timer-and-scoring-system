{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/timer/next/pages/timer.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\n\nconst TimerPage = () => {\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function reset() {\n    setMinutes();\n    setSeconds(0);\n    setIsActive(false);\n  }\n\n  const {\n    0: minutes,\n    1: setMinutes\n  } = useState(4);\n  const {\n    0: seconds,\n    1: setSeconds\n  } = useState(0);\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  useEffect(() => {\n    if (isActive) {\n      if (seconds == 0) {\n        if (minutes > 0) {\n          setSeconds(59);\n        }\n      }\n\n      if (seconds > 0) {\n        setTimeout(() => setSeconds(seconds - 1), 1000);\n      }\n    }\n  }, [isActive, seconds, minutes]);\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, minutes, \" : \", seconds < 10 ? `0${seconds}` : seconds), __jsx(\"button\", {\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, isActive ? 'Stop' : 'Start'));\n};\n\nexport default TimerPage;","map":{"version":3,"sources":["/Users/sam/Desktop/timer/next/pages/timer.js"],"names":["useState","useEffect","TimerPage","toggle","setIsActive","isActive","reset","setMinutes","setSeconds","minutes","seconds","setTimeout"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAEpB,WAASC,MAAT,GAAkB;AACdC,IAAAA,WAAW,CAAC,CAACC,QAAF,CAAX;AACH;;AAED,WAASC,KAAT,GAAiB;AACbC,IAAAA,UAAU;AACVC,IAAAA,UAAU,CAAC,CAAD,CAAV;AACAJ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AACD,QAAM;AAAA,OAACK,OAAD;AAAA,OAAUF;AAAV,MAAwBP,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM;AAAA,OAACU,OAAD;AAAA,OAAUF;AAAV,MAAwBR,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM;AAAA,OAACK,QAAD;AAAA,OAAWD;AAAX,MAA0BJ,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAGI,QAAH,EAAa;AACT,UAAGK,OAAO,IAAI,CAAd,EAAiB;AACb,YAAGD,OAAO,GAAG,CAAb,EAAgB;AACZD,UAAAA,UAAU,CAAC,EAAD,CAAV;AACH;AACJ;;AACD,UAAGE,OAAO,GAAG,CAAb,EAAgB;AACZC,QAAAA,UAAU,CAAC,MAAMH,UAAU,CAACE,OAAO,GAAG,CAAX,CAAjB,EAAgC,IAAhC,CAAV;AACH;AACJ;AAEJ,GAbQ,EAaN,CAACL,QAAD,EAAWK,OAAX,EAAoBD,OAApB,CAbM,CAAT;AAeA,SACI,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAL,SAAiBC,OAAO,GAAG,EAAV,GAAgB,IAAGA,OAAQ,EAA3B,GAA+BA,OAAhD,CADA,EAEA;AAAQ,IAAA,OAAO,EAAEP,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BE,QAAQ,GAAG,MAAH,GAAY,OAA9C,CAFA,CADJ;AAMH,CApCD;;AAsCA,eAAeH,SAAf","sourcesContent":["import { useState, useEffect } from 'react'\n\nconst TimerPage = () => {\n    \n    function toggle() {\n        setIsActive(!isActive)\n    }\n    \n    function reset() {\n        setMinutes()\n        setSeconds(0)\n        setIsActive(false)\n    }\n    const [minutes, setMinutes] = useState(4)\n    const [seconds, setSeconds] = useState(0)\n    const [isActive, setIsActive] = useState(false)\n    \n    useEffect(() => {\n\n        if(isActive) {\n            if(seconds == 0) {\n                if(minutes > 0) {\n                    setSeconds(59)\n                }\n            }\n            if(seconds > 0) {\n                setTimeout(() => setSeconds(seconds - 1), 1000)\n            }\n        }\n\n    }, [isActive, seconds, minutes])\n\n    return (\n        <>\n        <h1>{minutes} : {seconds < 10 ? `0${seconds}` : seconds}</h1>\n        <button onClick={toggle}>{isActive ? 'Stop' : 'Start'}</button>\n        </>\n    )\n}\n\nexport default TimerPage"]},"metadata":{},"sourceType":"module"}